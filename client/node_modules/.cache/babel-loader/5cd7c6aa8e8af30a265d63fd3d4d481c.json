{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\a.vidler\\\\projects\\\\typing-game\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [level, setLevel] = useState(0);\n  const [numString, setNumString] = useState(\"\");\n  const [timeRemaining, setTimeRemaining] = useState(3);\n  const [isTimeRunning, setIsTimeRunning] = useState(false);\n  const [text, setText] = useState(\"\");\n  const [isGameRunning, setIsGameRunning] = useState(false);\n  const textBoxRef = useRef(null);\n\n  function handleChange(e) {\n    const {\n      value\n    } = e.target;\n    setText(value);\n  }\n\n  function generateRandomNumber() {\n    let tempNumString = numString;\n    tempNumString = tempNumString + Math.floor(Math.random() * 10).toString();\n    setLevel(level + 1);\n    setNumString(tempNumString);\n    setIsTimeRunning(true);\n    setTimeRemaining(3);\n  }\n\n  function resetGame() {\n    setLevel(0);\n    setNumString(\"\");\n    setIsTimeRunning(false);\n    setText(\"\");\n    setIsGameRunning(false);\n  }\n\n  function startGame() {\n    generateRandomNumber();\n    setIsGameRunning(true);\n    textBoxRef.current.focus();\n  }\n\n  function submitAnswer() {\n    console.log(\"Answer submitted\");\n    console.log(text);\n    console.log(numString);\n    setText(\"\");\n    text === numString ? generateRandomNumber() : resetGame();\n  }\n\n  function readyForAnswer() {\n    setIsTimeRunning(false);\n    textBoxRef.current.focus();\n  }\n\n  useEffect(() => {\n    if (isTimeRunning && timeRemaining > 0) {\n      setTimeout(() => {\n        setTimeRemaining(time => time - 1);\n      }, 1000);\n    } else if (timeRemaining === 0) {\n      readyForAnswer();\n    }\n  }, [timeRemaining, isTimeRunning]);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Check your memory\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Level: \", level), React.createElement(\"button\", {\n    onClick: startGame,\n    disabled: isGameRunning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Start Game\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"textarea\", {\n    onChange: handleChange,\n    value: text,\n    ref: textBoxRef,\n    disabled: isTimeRunning,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: submitAnswer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Submit Answer\"), React.createElement(\"button\", {\n    onClick: resetGame,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Reset Game\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, isTimeRunning ? numString : \"\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, isTimeRunning ? timeRemaining : \"\"));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/a.vidler/projects/typing-game/src/App.js"],"names":["React","useState","useEffect","useRef","App","level","setLevel","numString","setNumString","timeRemaining","setTimeRemaining","isTimeRunning","setIsTimeRunning","text","setText","isGameRunning","setIsGameRunning","textBoxRef","handleChange","e","value","target","generateRandomNumber","tempNumString","Math","floor","random","toString","resetGame","startGame","current","focus","submitAnswer","console","log","readyForAnswer","setTimeout","time"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport './App.css';\n\nfunction App() {\n  const [level, setLevel] = useState(0)\n  const [numString, setNumString] = useState(\"\")\n  const [timeRemaining, setTimeRemaining] = useState(3)\n  const [isTimeRunning, setIsTimeRunning] = useState(false)\n  const [text, setText] = useState(\"\")\n  const [isGameRunning, setIsGameRunning] = useState(false)\n  const textBoxRef = useRef(null)\n\n  function handleChange(e) {\n    const {value} = e.target\n    setText(value)\n}\n\n\n  function generateRandomNumber() {\n    let tempNumString = numString\n    tempNumString = tempNumString + (Math.floor(Math.random() * 10)).toString()\n    setLevel(level+1)\n    setNumString(tempNumString)\n    setIsTimeRunning(true)\n    setTimeRemaining(3)\n    \n  }\n\n  function resetGame(){\n    setLevel(0)\n    setNumString(\"\")\n    setIsTimeRunning(false)\n    setText(\"\")\n    setIsGameRunning(false)\n  }\n\n  function startGame(){\n    generateRandomNumber()\n    setIsGameRunning(true)\n    textBoxRef.current.focus()\n  }\n\n  function submitAnswer(){\n    console.log(\"Answer submitted\")\n    console.log(text)\n    console.log(numString)\n    setText(\"\")\n    text === numString ? generateRandomNumber() : resetGame()\n  }\n\n  function readyForAnswer() {\n    setIsTimeRunning(false)\n    textBoxRef.current.focus()\n  }\n\n  useEffect(() => {\n    if(isTimeRunning && timeRemaining > 0) {\n        setTimeout(() => {\n            setTimeRemaining(time => time - 1)\n        }, 1000)\n    } else if(timeRemaining === 0) {\n        readyForAnswer()\n    }\n}, [timeRemaining, isTimeRunning])\n\n  return (\n    <div className=\"App\">\n      <h1>Check your memory</h1>\n      <h3>Level: {level}</h3>\n      <button onClick={startGame} disabled={isGameRunning}>Start Game</button><br />\n\n      <textarea onChange={handleChange} value={text} ref={textBoxRef} disabled={isTimeRunning}/><br />\n      <button onClick={submitAnswer}>Submit Answer</button>\n      <button onClick={resetGame}>Reset Game</button>\n\n      <p>{isTimeRunning ? numString : \"\"}</p>\n      <p>{isTimeRunning ? timeRemaining : \"\"}</p>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}