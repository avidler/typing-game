{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\a.vidler\\\\projects\\\\typing-game\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from\"react\";import axios from'axios';import\"bootstrap/dist/css/bootstrap.min.css\";function Game(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),level=_useState2[0],setLevel=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),highScore=_useState4[0],setHighScore=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),numString=_useState6[0],setNumString=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),finalNumString=_useState8[0],setFinalNumString=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),showFinalScore=_useState10[0],setShowFinalScore=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),timeRemaining=_useState12[0],setTimeRemaining=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isTimeRunning=_useState14[0],setIsTimeRunning=_useState14[1];var _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),text=_useState16[0],setText=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),isGameRunning=_useState18[0],setIsGameRunning=_useState18[1];var textBoxRef=useRef(null);function handleChange(e){var value=e.target.value;setText(value);}function generateRandomNumber(){setText(\"\");var tempNumString=numString;tempNumString=tempNumString+Math.floor(Math.random()*10).toString();setNumString(tempNumString);setLevel(level+1);setIsTimeRunning(true);setTimeRemaining(level+3);var tCtx=document.getElementById('textCanvas').getContext('2d'),imageElem=document.getElementById('image');tCtx.canvas.width=tCtx.measureText(tempNumString).width+20;tCtx.font='22px Verdana';tCtx.fillText(tempNumString,5,30);imageElem.src=tCtx.canvas.toDataURL();console.log(imageElem.src);}function resetGame(){setLevel(0);setNumString(\"\");setIsTimeRunning(false);setText(\"\");setShowFinalScore(false);}function startGame(){resetGame();setIsGameRunning(true);textBoxRef.current.focus();generateRandomNumber();}function endGame(){setLevel(0);setFinalNumString(numString);setNumString(\"\");setShowFinalScore(true);setIsGameRunning(false);setHighScore(level>highScore?level:highScore);axios.get('/scoreboard/').then(function(response){console.log(\"Score to beat: \",response.data[response.data.length-1].score);if(level>response.data[response.data.length-1].score){var result=window.prompt(\"Please enter username\",\"Player 1\");var userScore={username:result,score:level};axios.post('/scoreboard/add',userScore).then(function(res){return console.log(res.data);});}});//console.log(userScore)\n}function submitAnswer(){text===numString?generateRandomNumber():endGame();}function readyForAnswer(){setIsTimeRunning(false);textBoxRef.current.focus();}function enterPressed(event){var code=event.keyCode||event.which;if(code===13){submitAnswer();}}useEffect(function(){axios.get('/scoreboard/').then(function(response){console.log(\"Top score: \",response.data[0].score);setHighScore(response.data[0].score);});if(isTimeRunning&&timeRemaining>0){setTimeout(function(){setTimeRemaining(function(time){return time-1;});},1000);}else if(timeRemaining===0){readyForAnswer();}},[timeRemaining,isTimeRunning]);return React.createElement(\"div\",{className:\"App\"},React.createElement(\"h1\",null,\"Check your memory\"),React.createElement(\"h2\",null,\"High Score: \",highScore),React.createElement(\"h3\",null,\"Level: \",level),React.createElement(\"button\",{onClick:startGame,disabled:isGameRunning},\"Start Game\"),React.createElement(\"br\",null),React.createElement(\"textarea\",{onChange:handleChange,value:text,ref:textBoxRef,disabled:!isGameRunning||isTimeRunning,onKeyPress:enterPressed}),React.createElement(\"br\",null),React.createElement(\"button\",{onClick:submitAnswer,disabled:!isGameRunning||isTimeRunning},\"Submit Answer\"),React.createElement(\"div\",null,React.createElement(\"canvas\",{id:\"textCanvas\",height:\"40\"}),isTimeRunning?React.createElement(\"img\",{id:\"image\"}):React.createElement(\"img\",{id:\"image\",width:\"0px\"})),isTimeRunning?React.createElement(\"div\",{id:\"generated-text \"},React.createElement(\"p\",null,timeRemaining)):\"\",showFinalScore?React.createElement(\"div\",null,React.createElement(\"p\",null,\"Your text: \",text),React.createElement(\"p\",null,finalNumString)):\"\");}export default Game;","map":{"version":3,"sources":["C:/Users/a.vidler/projects/typing-game/src/components/game.component.js"],"names":["React","useState","useRef","useEffect","axios","Game","level","setLevel","highScore","setHighScore","numString","setNumString","finalNumString","setFinalNumString","showFinalScore","setShowFinalScore","timeRemaining","setTimeRemaining","isTimeRunning","setIsTimeRunning","text","setText","isGameRunning","setIsGameRunning","textBoxRef","handleChange","e","value","target","generateRandomNumber","tempNumString","Math","floor","random","toString","tCtx","document","getElementById","getContext","imageElem","canvas","width","measureText","font","fillText","src","toDataURL","console","log","resetGame","startGame","current","focus","endGame","get","then","response","data","length","score","result","window","prompt","userScore","username","post","res","submitAnswer","readyForAnswer","enterPressed","event","code","keyCode","which","setTimeout","time"],"mappings":"gIAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,MAAzB,CAAiCC,SAAjC,KAAiD,OAAjD,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,sCAAP,CAEA,QAASC,CAAAA,IAAT,EAAgB,eACcJ,QAAQ,CAAC,CAAD,CADtB,wCACLK,KADK,eACEC,QADF,8BAEsBN,QAAQ,EAF9B,yCAELO,SAFK,eAEMC,YAFN,8BAGsBR,QAAQ,CAAC,EAAD,CAH9B,yCAGLS,SAHK,eAGMC,YAHN,8BAIgCV,QAAQ,CAAC,EAAD,CAJxC,yCAILW,cAJK,eAIWC,iBAJX,8BAKgCZ,QAAQ,CAAC,KAAD,CALxC,0CAKLa,cALK,gBAKWC,iBALX,gCAM8Bd,QAAQ,CAAC,CAAD,CANtC,2CAMLe,aANK,gBAMUC,gBANV,gCAO8BhB,QAAQ,CAAC,KAAD,CAPtC,2CAOLiB,aAPK,gBAOUC,gBAPV,gCAQYlB,QAAQ,CAAC,EAAD,CARpB,2CAQLmB,IARK,gBAQCC,OARD,gCAS8BpB,QAAQ,CAAC,KAAD,CATtC,2CASLqB,aATK,gBASUC,gBATV,gBAUZ,GAAMC,CAAAA,UAAU,CAAGtB,MAAM,CAAC,IAAD,CAAzB,CAEA,QAASuB,CAAAA,YAAT,CAAsBC,CAAtB,CAAyB,IAChBC,CAAAA,KADgB,CACPD,CAAC,CAACE,MADK,CAChBD,KADgB,CAEvBN,OAAO,CAACM,KAAD,CAAP,CACH,CAGC,QAASE,CAAAA,oBAAT,EAAgC,CAC5BR,OAAO,CAAC,EAAD,CAAP,CACA,GAAIS,CAAAA,aAAa,CAAGpB,SAApB,CACAoB,aAAa,CAAGA,aAAa,CAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,EAA3B,CAAD,CAAiCC,QAAjC,EAAhC,CACAvB,YAAY,CAACmB,aAAD,CAAZ,CACAvB,QAAQ,CAACD,KAAK,CAAC,CAAP,CAAR,CACAa,gBAAgB,CAAC,IAAD,CAAhB,CACAF,gBAAgB,CAACX,KAAK,CAAC,CAAP,CAAhB,CAEA,GAAI6B,CAAAA,IAAI,CAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,UAAtC,CAAiD,IAAjD,CAAX,CACAC,SAAS,CAAGH,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CADZ,CAIAF,IAAI,CAACK,MAAL,CAAYC,KAAZ,CAAoBN,IAAI,CAACO,WAAL,CAAiBZ,aAAjB,EAAgCW,KAAhC,CAAsC,EAA1D,CACAN,IAAI,CAACQ,IAAL,CAAY,cAAZ,CACAR,IAAI,CAACS,QAAL,CAAcd,aAAd,CAA6B,CAA7B,CAAgC,EAAhC,EACAS,SAAS,CAACM,GAAV,CAAgBV,IAAI,CAACK,MAAL,CAAYM,SAAZ,EAAhB,CACAC,OAAO,CAACC,GAAR,CAAYT,SAAS,CAACM,GAAtB,EAEH,CAED,QAASI,CAAAA,SAAT,EAAqB,CACjB1C,QAAQ,CAAC,CAAD,CAAR,CACAI,YAAY,CAAC,EAAD,CAAZ,CACAQ,gBAAgB,CAAC,KAAD,CAAhB,CACAE,OAAO,CAAC,EAAD,CAAP,CACAN,iBAAiB,CAAC,KAAD,CAAjB,CACH,CAGD,QAASmC,CAAAA,SAAT,EAAoB,CAEhBD,SAAS,GACT1B,gBAAgB,CAAC,IAAD,CAAhB,CACAC,UAAU,CAAC2B,OAAX,CAAmBC,KAAnB,GACAvB,oBAAoB,GACvB,CAED,QAASwB,CAAAA,OAAT,EAAmB,CACf9C,QAAQ,CAAC,CAAD,CAAR,CACAM,iBAAiB,CAACH,SAAD,CAAjB,CACAC,YAAY,CAAC,EAAD,CAAZ,CACFI,iBAAiB,CAAC,IAAD,CAAjB,CACAQ,gBAAgB,CAAC,KAAD,CAAhB,CACAd,YAAY,CAACH,KAAK,CAACE,SAAN,CAAkBF,KAAlB,CAA0BE,SAA3B,CAAZ,CAEFJ,KAAK,CAACkD,GAAN,CAAU,cAAV,EACKC,IADL,CACU,SAAAC,QAAQ,CAAI,CAChBT,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA8BQ,QAAQ,CAACC,IAAT,CAAcD,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqB,CAAnC,EAAsCC,KAApE,EACA,GAAIrD,KAAK,CAAGkD,QAAQ,CAACC,IAAT,CAAcD,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqB,CAAnC,EAAsCC,KAAlD,CAAwD,CACtD,GAAIC,CAAAA,MAAM,CAAGC,MAAM,CAACC,MAAP,CAAc,uBAAd,CAAuC,UAAvC,CAAb,CACA,GAAMC,CAAAA,SAAS,CAAE,CACfC,QAAQ,CAAEJ,MADK,CAEfD,KAAK,CAAErD,KAFQ,CAAjB,CAKFF,KAAK,CAAC6D,IAAN,CAAW,iBAAX,CAA8BF,SAA9B,EACCR,IADD,CACM,SAAAW,GAAG,QAAInB,CAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAG,CAACT,IAAhB,CAAJ,EADT,EAEC,CAEF,CAdL,EAeA;AAGC,CAED,QAASU,CAAAA,YAAT,EAAuB,CACrB/C,IAAI,GAAKV,SAAT,CAAqBmB,oBAAoB,EAAzC,CAA8CwB,OAAO,EAArD,CACD,CAED,QAASe,CAAAA,cAAT,EAA0B,CACxBjD,gBAAgB,CAAC,KAAD,CAAhB,CACAK,UAAU,CAAC2B,OAAX,CAAmBC,KAAnB,GACD,CAED,QAASiB,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,CAC3B,GAAIC,CAAAA,IAAI,CAAGD,KAAK,CAACE,OAAN,EAAiBF,KAAK,CAACG,KAAlC,CACA,GAAGF,IAAI,GAAK,EAAZ,CAAgB,CAAEJ,YAAY,GAC7B,CACJ,CAEChE,SAAS,CAAC,UAAM,CACdC,KAAK,CAACkD,GAAN,CAAU,cAAV,EACCC,IADD,CACM,SAAAC,QAAQ,CAAI,CAChBT,OAAO,CAACC,GAAR,CAAY,aAAZ,CAA0BQ,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBE,KAA3C,EACClD,YAAY,CAAC+C,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBE,KAAlB,CAAZ,CAEF,CALD,EAUA,GAAGzC,aAAa,EAAIF,aAAa,CAAG,CAApC,CAAuC,CACnC0D,UAAU,CAAC,UAAM,CACbzD,gBAAgB,CAAC,SAAA0D,IAAI,QAAIA,CAAAA,IAAI,CAAG,CAAX,EAAL,CAAhB,CACH,CAFS,CAEP,IAFO,CAAV,CAGH,CAJD,IAIO,IAAG3D,aAAa,GAAK,CAArB,CAAwB,CAC3BoD,cAAc,GACjB,CACJ,CAlBU,CAkBR,CAACpD,aAAD,CAAgBE,aAAhB,CAlBQ,CAAT,CAoBA,MACE,4BAAK,SAAS,CAAC,KAAf,EACE,kDADF,CAEE,6CAAiBV,SAAjB,CAFF,CAGE,wCAAYF,KAAZ,CAHF,CAIE,8BAAQ,OAAO,CAAE4C,SAAjB,CAA4B,QAAQ,CAAE5B,aAAtC,eAJF,CAI0E,8BAJ1E,CAMI,gCACE,QAAQ,CAAEG,YADZ,CAEE,KAAK,CAAEL,IAFT,CAGE,GAAG,CAAEI,UAHP,CAIE,QAAQ,CAAG,CAACF,aAAD,EAAgBJ,aAJ7B,CAKE,UAAU,CAAEmD,YALd,EANJ,CAcE,8BAdF,CAeE,8BACE,OAAO,CAAEF,YADX,CAEE,QAAQ,CAAG,CAAC7C,aAAD,EAAgBJ,aAF7B,kBAfF,CAsBE,+BACD,8BAAQ,EAAE,CAAC,YAAX,CAAwB,MAAM,CAAC,IAA/B,EADC,CAECA,aAAa,CAAI,2BAAK,EAAE,CAAC,OAAR,EAAJ,CAAwB,2BAAK,EAAE,CAAC,OAAR,CAAgB,KAAK,CAAC,KAAtB,EAFtC,CAtBF,CA4BGA,aAAa,CAAG,2BAAK,EAAE,CAAC,iBAAR,EAA0B,6BAAIF,aAAJ,CAA1B,CAAH,CAA4D,EA5B5E,CA8BGF,cAAc,CAAG,+BAAK,2CAAeM,IAAf,CAAL,CAA6B,6BAAIR,cAAJ,CAA7B,CAAH,CAAgE,EA9BjF,CADF,CAoCH,CAED,cAAeP,CAAAA,IAAf","sourcesContent":["import React, {useState, useRef, useEffect} from \"react\"\r\nimport axios from 'axios'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nfunction Game() {\r\n    const [level, setLevel] = useState(0)\r\n    const [highScore, setHighScore] = useState()\r\n    const [numString, setNumString] = useState(\"\")\r\n    const [finalNumString, setFinalNumString] = useState(\"\")\r\n    const [showFinalScore, setShowFinalScore] = useState(false)\r\n    const [timeRemaining, setTimeRemaining] = useState(0)\r\n    const [isTimeRunning, setIsTimeRunning] = useState(false)\r\n    const [text, setText] = useState(\"\")\r\n    const [isGameRunning, setIsGameRunning] = useState(false)\r\n    const textBoxRef = useRef(null)\r\n  \r\n    function handleChange(e) {\r\n      const {value} = e.target\r\n      setText(value)\r\n  }\r\n  \r\n  \r\n    function generateRandomNumber() {\r\n        setText(\"\")\r\n        let tempNumString = numString\r\n        tempNumString = tempNumString + (Math.floor(Math.random() * 10)).toString()\r\n        setNumString(tempNumString)\r\n        setLevel(level+1)\r\n        setIsTimeRunning(true)\r\n        setTimeRemaining(level+3)\r\n\r\n        var tCtx = document.getElementById('textCanvas').getContext('2d'),\r\n        imageElem = document.getElementById('image');\r\n    \r\n        \r\n        tCtx.canvas.width = tCtx.measureText(tempNumString).width+20;\r\n        tCtx.font = '22px Verdana'\r\n        tCtx.fillText(tempNumString, 5, 30);\r\n        imageElem.src = tCtx.canvas.toDataURL();\r\n        console.log(imageElem.src);\r\n      \r\n    }\r\n\r\n    function resetGame() {\r\n        setLevel(0)\r\n        setNumString(\"\")\r\n        setIsTimeRunning(false)\r\n        setText(\"\")\r\n        setShowFinalScore(false)\r\n    }\r\n  \r\n   \r\n    function startGame(){\r\n      \r\n        resetGame()\r\n        setIsGameRunning(true)\r\n        textBoxRef.current.focus()\r\n        generateRandomNumber()\r\n    }\r\n  \r\n    function endGame() {\r\n        setLevel(0)\r\n        setFinalNumString(numString)\r\n        setNumString(\"\")\r\n      setShowFinalScore(true)\r\n      setIsGameRunning(false)\r\n      setHighScore(level>highScore ? level : highScore)\r\n      \r\n    axios.get('/scoreboard/')\r\n        .then(response => {\r\n          console.log(\"Score to beat: \",response.data[response.data.length-1].score)\r\n          if (level > response.data[response.data.length-1].score){\r\n            let result = window.prompt(\"Please enter username\", \"Player 1\")\r\n            const userScore= {\r\n              username: result,\r\n              score: level\r\n          }\r\n\r\n          axios.post('/scoreboard/add', userScore)\r\n          .then(res => console.log(res.data))\r\n          }\r\n            \r\n        })\r\n    //console.log(userScore)\r\n\r\n   \r\n    }\r\n  \r\n    function submitAnswer(){\r\n      text === numString ? generateRandomNumber() : endGame()\r\n    }\r\n  \r\n    function readyForAnswer() {\r\n      setIsTimeRunning(false)\r\n      textBoxRef.current.focus()\r\n    }\r\n\r\n    function enterPressed(event) {\r\n      var code = event.keyCode || event.which;\r\n      if(code === 13) { submitAnswer()\r\n      } \r\n  }\r\n  \r\n    useEffect(() => {\r\n      axios.get('/scoreboard/')\r\n      .then(response => {\r\n        console.log(\"Top score: \",response.data[0].score)\r\n         setHighScore(response.data[0].score) \r\n          \r\n      })\r\n\r\n\r\n   \r\n\r\n      if(isTimeRunning && timeRemaining > 0) {\r\n          setTimeout(() => {\r\n              setTimeRemaining(time => time - 1)\r\n          }, 1000)\r\n      } else if(timeRemaining === 0) {\r\n          readyForAnswer()\r\n      }\r\n  }, [timeRemaining, isTimeRunning])\r\n  \r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Check your memory</h1>\r\n        <h2>High Score: {highScore}</h2>\r\n        <h3>Level: {level}</h3>\r\n        <button onClick={startGame} disabled={isGameRunning}>Start Game</button><br />\r\n        \r\n          <textarea \r\n            onChange={handleChange} \r\n            value={text} \r\n            ref={textBoxRef} \r\n            disabled={(!isGameRunning||isTimeRunning)}\r\n            onKeyPress={enterPressed}\r\n          />\r\n\r\n        <br />\r\n        <button \r\n          onClick={submitAnswer} \r\n          disabled={(!isGameRunning||isTimeRunning)}\r\n          \r\n        >\r\n          Submit Answer\r\n        </button>\r\n        <div>\r\n       <canvas id='textCanvas' height='40'></canvas>\r\n        {isTimeRunning ?  <img id='image'/> : <img id='image' width='0px'/>}\r\n        </div>\r\n     \r\n  \r\n        {isTimeRunning ? <div id=\"generated-text \"><p>{timeRemaining}</p></div> : \"\"}\r\n      \r\n        {showFinalScore ? <div><p>Your text: {text}</p><p>{finalNumString}</p></div> : \"\"}\r\n        \r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Game\r\n"]},"metadata":{},"sourceType":"module"}